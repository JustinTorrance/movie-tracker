{"version":3,"sources":["utils/apiCalls.js","components/MovieCard/MovieCard.js","actions/index.js","components/Loading/Loading.js","components/MovieDisplay/MovieDisplay.js","thunks/fetchMovies.js","containers/Login/Login.js","thunks/loginUser.js","components/Signup/Signup.js","components/ErrorPage/ErrorPage.js","containers/App/App.js","serviceWorker.js","reducers/moviesReducer.js","reducers/userReducer.js","reducers/loadingReducer.js","reducers/errorReducer.js","reducers/index.js","index.js"],"names":["addUser","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","user","response","data","wrap","_context","prev","next","fetch","method","body","JSON","stringify","headers","Content-Type","sent","json","abrupt","t0","Error","stop","this","_x","apply","arguments","addFavorite","_ref2","_callee2","movie_id","user_id","movie","_context2","title","poster_path","release_date","vote_average","overview","_x2","_x3","_x4","getFavorites","_ref3","_callee3","_context3","concat","_x5","deleteFavorite","_ref4","_callee4","_context4","_x6","_x7","MovieCard","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleFavorite","_this$props","movieId","props","id","state","favorite","API","reRender","setState","inherits","createClass","key","value","_componentDidMount","currentFavorites","_this2","find","faveMovie","react_default","createElement","className","style","backgroundImage","onClick","Component","connect","loadMovies","movies","type","signIn","loading","bool","catchError","Loading","MovieDisplay","componentDidMount","favoriteMovies","favorites","_toggleFavorites","current","signOut","isLoading","renderedMovies","buttonText","components_Loading_Loading","src","alt","name","Link","to","toggleFavorites","map","components_MovieCard_MovieCard","uid","length","dispatch","url","fetchMovies","Login","handleChange","e","_e$target","target","defineProperty","handleSubmit","_this$state","email","password","preventDefault","loginUser","undefined","incorrectLogin","validUser","Redirect","_this$state2","onSubmit","placeholder","onChange","Signup","emailValidation","regex","RegExp","match","checkFormCompletion","confirmPassword","emailInputVal","validEmail","duplicateUser","passwordsMatch","error","formComplete","_this$state3","disabled","returnToSite","App","components_ErrorPage_ErrorPage","Switch","Route","exact","path","render","component","components_MovieDisplay_MovieDisplay","ErrorPage","withRouter","Boolean","window","location","hostname","moviesReducer","action","results","toConsumableArray","defaultState","userReducer","loadingReducer","errorReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b28f900b.chunk.js","sourcesContent":["\nexport const addUser = async (user) => {\n  try {\n    const response = await fetch(\"http://localhost:3000/api/users/new\", {\n      method: 'POST',\n      body: JSON.stringify(user),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    const data = await response.json()\n    return data \n  } catch(error) {\n    throw new Error()\n  }\n}\n\n\nexport const addFavorite = async (movie_id, user_id, movie) => {\n  const response = await fetch('http://localhost:3000/api/users/favorites/new', {\n      method: 'POST',\n      body: JSON.stringify({movie_id, user_id, title: movie.title, poster_path: movie.poster_path, release_date: movie.release_date, vote_average: movie.vote_average, overview: movie.overview\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    const data = await response.json()\n    return data \n}\n\nexport const getFavorites = async (user_id) => {\n  const response = await fetch(`http://localhost:3000/api/users/${user_id}/favorites`)\n  const data = await response.json()\n  return data \n}\n\nexport const deleteFavorite = async (user_id, movie_id) => {\n  const response = await fetch(`http://localhost:3000/api/users/${user_id}/favorites/${movie_id}`, {\n    method: 'DELETE',\n    body: JSON.stringify({user_id, movie_id}),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n  const data = await response.json()\n  return data\n}","import React, { Component } from 'react'\nimport { PropTypes } from 'prop-types'\nimport * as API from '../../utils/apiCalls'\nimport { connect } from 'react-redux'\n\nexport class MovieCard extends Component {\n  constructor(){\n    super()\n    this.state = {\n      favorite: false\n    }\n  }\n\n  async componentDidMount() {\n    const currentFavorites = await API.getFavorites(this.props.user_id)\n    const found = currentFavorites.data.find((faveMovie) => {\n      return faveMovie.movie_id === this.props.movie.movie_id || faveMovie.movie_id === this.props.movie.id\n    })\n    if (found) {\n      this.setState({\n        favorite: true\n      })\n    } else {\n      this.setState({\n        favorite: false\n      })\n    } \n  }\n\n  toggleFavorite = async () => {\n    let { user_id, movie } = this.props\n    let movieId = movie.id\n\n    if (movie.movie_id) {\n      movieId = movie.movie_id\n    }\n\n    if (this.state.favorite) {\n      await API.deleteFavorite(user_id, movieId) \n      this.props.reRender()\n    } else {\n      await API.addFavorite(movie.id, user_id, movie) \n    }\n    this.setState({favorite: !this.state.favorite})\n  }\n\n  render() {\n    const { movie } = this.props\n    return (\n    <article className='movie-card' style={{ backgroundImage: `url(${movie.poster_path})` }}>\n      <div className='star-container'>\n      </div>\n      <i onClick={this.toggleFavorite} className={`fas fa-star ${this.state.favorite && 'favorite'}`}></i> \n      <div className='dark-background'></div>\n      <div className='movie-title-container'>\n        <h2 className='movie-title'>{movie.title}</h2>\n        <p className='release-date-label'>Released:</p>\n        <p className='movie-release-date'>{movie.release_date}</p>\n        <p className='rating-label'>Avg. Rating:</p>\n        <p className='movie-rating'>{movie.vote_average}</p>\n      </div>\n      <p className='overview'>{movie.overview}</p>\n    </article>\n    )\n  }\n} \n\nexport const mapStateToProps = (state) => ({\n  user_id: state.user.id\n})\n\nMovieCard.propTypes = {\n  movie: PropTypes.object.isRequired,\n  user_id: PropTypes.number.isRequired,\n}\n\nexport default connect(mapStateToProps)(MovieCard)\n","export const loadMovies = (movies) => ({\n  type: 'LOAD_MOVIES',\n  movies\n})\n\nexport const signIn = (user) => ({\n  type: 'SIGN_IN',\n  user\n})\n\nexport const signOut = () => ({\n  type: 'SIGN_OUT'\n})\n\nexport const loading = (bool) => ({\n  type: 'IS_LOADING',\n  bool\n})\n\nexport const catchError = (bool) => ({\n  type: 'IS_ERROR',\n  bool\n})\n","import React from 'react'\n\nconst Loading = () => {\n  return (\n    <div>\n      <div className=\"loading-container\">\n        <div className=\"lds-ripple\">\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n        <p className=\"loading\">Loading</p>\n    </div>\n  )\n}\n\nexport default Loading","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport MovieCard from '../MovieCard/MovieCard'\nimport { uid } from 'react-uid'\nimport { signOut } from '../../actions/index'\nimport { PropTypes } from 'prop-types'\nimport { getFavorites } from '../../utils/apiCalls.js'\nimport Loading from '../Loading/Loading'\nimport { Link } from 'react-router-dom'\nimport { fetchMovies } from '../../thunks/fetchMovies'\n\nexport class MovieDisplay extends Component {\n  constructor() {\n    super()\n    this.state = {\n      favorites: '',\n      favoriteMovies: []\n    }\n  }\n\n  componentDidMount = async () => {\n    await this.props.loadMovies('https://api.themoviedb.org/3/movie/popular?api_key=da90047b6c1d3526d4b04666a1b64a0d&language=en-US&page=1&region=US')\n    const favoriteMovies = await getFavorites(this.props.user_id)\n    this.setState({favoriteMovies: favoriteMovies.data})\n  }\n\n  async toggleFavorites() {\n    let current = ''\n    const favoriteMovies = await getFavorites(this.props.user_id)\n    if (!this.state.favorites) {\n      current = 'favorites'\n    }\n    this.setState({\n      favorites: current,\n      favoriteMovies: favoriteMovies.data\n    })\n  }\n\n  render() {\n    const { movies, signOut, isLoading, user } = this.props\n    let renderedMovies = movies\n    if(this.state.favorites) {\n      renderedMovies = this.state.favoriteMovies\n      var title = 'Favorites'\n      var buttonText = 'trending'\n    } else {\n      var title = 'Trending'\n      var buttonText = 'favorites'\n    }\n    if(isLoading) {\n      return (<Loading />)\n    }\n    return(\n      <section className=\"movies-section-container\">\n        <header className='movies-header'>\n          <h1 className=\"movie-tracker\">  \n            movie\n            <img src='./images/movie_roll.svg' alt=\"movie roll\" className='main-logo'></img>\n            tracker\n          </h1>\n          <p className='user-greeting'>Hello, {user.name}</p>\n          <Link to={'/login'}>\n            <button className='sign-out-btn' onClick={signOut}>sign out</button>\n          </Link>\n          <Link to={`/${buttonText}`}>\n            <button className='toggle-favorites-btn' onClick={() => this.toggleFavorites()}>{ buttonText}</button>\n          </Link>\n        </header>\n        <h2 className='movie-container-label'>{title}</h2>\n        <div className='movie-container-underline'></div>\n        <div className=\"movies-container\">{renderedMovies.map((movie) => {\n          return (\n            <MovieCard movie={movie} key={uid(movie)} reRender={this.componentDidMount}/>\n          )\n        })}\n        {\n          renderedMovies.length === 0 && <h2 className=\"no-favorites\">You Have No Favorites</h2>\n        }\n        </div>\n      </section>\n    )\n    }\n  }\n\nexport const mapStateToProps = (state) => ({\n  movies: state.movies,\n  user_id: state.user.id,\n  isLoading: state.isLoading,\n  user: state.user\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  loadMovies: (url) => dispatch(fetchMovies(url)),\n  signOut: () => dispatch(signOut())\n})\n\n\nMovieDisplay.propTypes = {\n  movies: PropTypes.array.isRequired,\n  signOut: PropTypes.func.isRequired,\n  loadMovies: PropTypes.func.isRequired,\n  user_id: PropTypes.number.isRequired,\n  isLoading: PropTypes.bool,\n  user: PropTypes.object.isRequired\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDisplay)","import { loadMovies } from '../actions/index'\nimport { loading } from '../actions/index'\nimport { catchError } from '../actions/index'\n\n\nexport const fetchMovies = (url) => {\n  return async (dispatch) => {\n    try {\n      dispatch(loading(true))\n      const response = await fetch(url)\n      const movies = await response.json()\n      dispatch(loadMovies(movies))\n      dispatch(loading(false))      \n    } catch(error) {\n      dispatch(catchError(true))\n      return 'Error: something went wrong'\n    }\n  }\n}","import React, { Component } from 'react'\nimport { Redirect, Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { PropTypes } from 'prop-types'\nimport { loginUser } from '../../thunks/loginUser'\n\nexport class Login extends Component {\n  constructor() {\n    super()\n    this.state = {\n      email: '',\n      password: '',\n      validUser: false,\n      incorrectLogin: false\n    }\n  }\n\n  handleChange = (e) => {\n    const { value, name } = e.target\n    this.setState({\n      [name]: value\n    })\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault()\n    const { email, password } = this.state\n    const loginAttempt = await this.props.loginUser({email, password})\n    if(loginAttempt !== undefined) {\n      this.setState({incorrectLogin: true})\n    } else {\n      this.setState({validUser: true})\n    }\n\n  }\n\n  render() {\n    if(this.state.validUser) {\n      return (\n        <Redirect to='/' />\n      )\n    }\n    const { email, password, incorrectLogin } = this.state\n    return (\n      <div>\n        <h1 className='form-title'>\n          movie\n          <img src='./images/movie_roll.svg' alt=\"movie roll\" className='form-logo'></img>\n          tracker\n        </h1>\n        <h2 className='login-title'>Login</h2>\n        <form className='login-form' onSubmit={this.handleSubmit}>\n          <input \n            className='form-input email'\n            type='text' \n            placeholder='email' \n            value={email} \n            name='email'\n            onChange={this.handleChange}>\n          </input>\n          <input \n            className='form-input password'\n            type='password' \n            placeholder='password' \n            value={password}\n            name='password'\n            onChange={this.handleChange}>\n          </input>\n          <button>Login</button>\n        </form>\n        <div className='new-account-container'>\n          <h3 className={`incorrect-login ${incorrectLogin && 'incorrect'}`}>username or password is incorrect</h3>\n          <h3>Don't have an account?</h3>\n          <Link className='form-link' to='/signup' >Create New Account</Link>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport const mapDispatchToProps = (dispatch) => ({ \n  loginUser: (user) => dispatch(loginUser(user))\n})\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired\n}\n\nexport default connect(null, mapDispatchToProps)(Login)","import { signIn } from '../actions/index'\n\nexport const loginUser = (user) => {\n  return async (dispatch) => {\n    try {\n      const response = await fetch(\"http://localhost:3000/api/users/\", {\n        method: 'POST',\n        body: JSON.stringify(user),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      const data = await response.json()\n      dispatch(signIn(data.data))\n    } catch(error) {\n      return new Error('Error: something went wrong')\n    }\n  }\n}","import React, { Component } from 'react'\nimport { addUser } from '../../utils/apiCalls'\nimport { Redirect, Link } from 'react-router-dom'\n\n\nexport default class Signup extends Component {\n  constructor() {\n    super()\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      duplicateUser: false,\n      validUser: false,\n      formComplete: false,\n      passwordsMatch: true,\n      validEmail: true\n    }\n  }\n\n  emailValidation = (email) => {\n    var expression = /^(?:[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&amp;'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/;\n    var regex = new RegExp(expression);\n    var emailInput = email;\n    if (emailInput.match(regex)) {\n      return true\n    } else {\n      return false;\n    }\n  }\n\n  handleChange = async (e) => {\n    const { name, value } = e.target\n    await this.setState({\n      [name]: value,\n    })\n    this.checkFormCompletion()\n  }\n\n  checkFormCompletion() {\n    const { name, email, password, confirmPassword } = this.state\n    this.setState({\n      formComplete: (name !== '' && email !== '' && password !== '' && confirmPassword !== '')\n    })\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault()\n    const { name, email, password, confirmPassword } = this.state\n    const emailInputVal = email\n    if (!this.emailValidation(emailInputVal)) {\n      this.setState({ validEmail: false, duplicateUser: false, passwordsMatch: true})\n      return\n    }\n    if (password !== confirmPassword) {\n      this.setState({ duplicateUser: false, passwordsMatch: false, validEmail: true })\n      return\n    }\n    const data = await addUser({ name, email, password }) \n    if (data.error) {\n      this.setState({ duplicateUser: true, passwordsMatch: true, validEmail: true})\n    } else {\n      this.setState({ validUser: true})\n    }\n  }\n\n  render() {\n    const { name, email, password, confirmPassword, validUser, formComplete, duplicateUser, passwordsMatch, validEmail} = this.state\n    if (validUser) {\n     return <Redirect to='/login' />\n    }\n    return(\n      <div className=\"sign-up-container\">\n        <h1 className='form-title'>\n          movie\n          <img src='./images/movie_roll.svg' alt=\"movie roll\" className='form-logo'></img>\n          tracker\n        </h1>\n        <h2 className='login-title'>Sign Up</h2>\n        <form className='login-form create-new-user-form' onSubmit={this.handleSubmit}>\n          <input \n            onChange={this.handleChange}\n            type='text'\n            placeholder='name'\n            name='name'\n            value={name}\n          />\n          <input \n            onChange={this.handleChange}\n            type='text'\n            placeholder='email'\n            name='email'\n            value={email}\n          />\n          <input \n            onChange={this.handleChange}\n            type='password'\n            placeholder='password'\n            name='password'\n            value={password}\n          />\n          <input \n            onChange={this.handleChange}\n            type='password'\n            placeholder='confirm password'\n            name='confirmPassword'\n            value={confirmPassword}\n          />\n          <button disabled={!formComplete}>Submit</button>\n          <Link className='form-link' to='/login' >Return to login</Link>\n        </form>\n        <h3 className={`duplicate-user-message ${duplicateUser && 'create-user-error'}`}>An account already exists with that email</h3>\n        <h3 className={`passwords-message ${!passwordsMatch && 'create-user-error'}`}>Passwords must match</h3>\n        <h3 className={`passwords-message ${!validEmail && 'create-user-error'}`}>Please enter a valid e-mail</h3>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { catchError } from '../../actions/index'\nimport { connect } from 'react-redux'\n\nexport const ErrorPage = ({returnToSite}) => {\n\n  return (\n    <div className='error-page-container'>\n      <h1>OOPS!</h1>\n      <h2>An unexpected error occurred...</h2>\n      <button className='return-to-site-btn' onClick={() => returnToSite()}>Return to Site</button>\n    </div>\n  )\n}\n\nexport const mapDispatchToProps = (dispatch) => ({\n  returnToSite: () => dispatch(catchError(false))\n})\n\nexport default connect(null, mapDispatchToProps)(ErrorPage)","import React, { Component } from 'react'\nimport MovieDisplay from '../../components/MovieDisplay/MovieDisplay'\nimport { connect } from 'react-redux'\nimport './App.scss'\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport Login from '../Login/Login'\nimport Signup from '../../components/Signup/Signup'\nimport { PropTypes } from 'prop-types'\nimport ErrorPage from '../../components/ErrorPage/ErrorPage'\n\nexport class App extends Component {\n  constructor() {\n    super()\n  }\n\n  render() {\n    const { user, error } = this.props\n    if (error) {\n      return <ErrorPage/>\n    }\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route \n            exact\n            path='/' \n            render={() => {\n              if (!user.name) {\n                return <Redirect to='/login' />\n              } else {\n                return <Redirect to='/trending' />\n              }\n            }}\n          />\n          <Route\n            path='/login'\n            component={Login}\n          />\n          <Route\n            path='/signup'\n            component={Signup}\n          />\n          <Route\n            path='/favorites'\n            render={() => {\n              if (!user.name){\n                return <Redirect to='/login' />\n              } else {\n                return <MovieDisplay />\n              }\n            }}\n          />\n          <Route\n            path='/trending'\n            render={() => {\n              if (!user.name){\n                return <Redirect to='/login' />\n              } else {\n                return <MovieDisplay />\n              }\n            }}\n          />\n          <Route \n            path='/error'\n            component={ErrorPage} />\n        </Switch>\n      </div>\n\n    )\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  movies: state.movies,\n  user: state.user,\n  error: state.error\n})\n\n\nApp.propTypes = {\n  movies: PropTypes.array.isRequired,\n  user: PropTypes.object.isRequired,\n  error: PropTypes.bool.isRequired\n}\n\nexport default withRouter(connect(mapStateToProps)(App))\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const moviesReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'LOAD_MOVIES': \n      const movies = action.movies.results.map((movie) => {\n        return { id: movie.id,\n          title: movie.title,\n          release_date: movie.release_date,\n          vote_average: movie.vote_average,\n          poster_path: 'https://image.tmdb.org/t/p/w500///' + movie.poster_path,\n          overview: movie.overview\n        }\n      }) \n      return [...state, ...movies]\n    default:\n      return state\n  }\n}\n\nexport default moviesReducer","const defaultState = {\n  name: null,\n}\n\nconst userReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SIGN_IN':\n      return action.user\n    case 'SIGN_OUT':\n      return {}\n    default: return state\n  } \n}\n\nexport default userReducer","const loadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'IS_LOADING':\n      return action.bool\n    default: return state\n  } \n}\n\nexport default loadingReducer","const errorReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'IS_ERROR':\n      return action.bool\n    default: return state\n  } \n}\n\nexport default errorReducer","import { combineReducers } from 'redux'\nimport moviesReducer from './moviesReducer'\nimport userReducer from './userReducer'\nimport loadingReducer from './loadingReducer';\nimport errorReducer from './errorReducer';\n\n\nconst rootReducer = combineReducers({\n  movies: moviesReducer,\n  user: userReducer,\n  isLoading: loadingReducer,\n  error: errorReducer\n})\n\nexport default rootReducer","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './containers/App/App'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter } from 'react-router-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport rootReducer from './reducers/index'\nimport { Provider } from 'react-redux'\nimport { Route } from 'react-router-dom'\nimport thunk from 'redux-thunk'\n\n\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <Route path='/' component={App} />\n    </BrowserRouter> \n  </Provider>,\n\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}