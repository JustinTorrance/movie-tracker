// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MovieCard MovieCard Component should match the snapshot with all data passed in correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MovieCard
    movie={
      Object {
        "backdropPic": "https://image.tmdb.org/t/p/w500///",
        "genres": "drama",
        "id": 1,
        "overview": "great movie",
        "posterPic": "https://image.tmdb.org/t/p/w500///",
        "rating": 9,
        "runtime": 50,
        "title": "Titanic",
        "year": 1999,
      }
    }
    user_id={1}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <i
          className="fas fa-star false"
          onClick={[Function]}
        />,
        <div
          className="dark-background"
        />,
        <div
          className="movie-title-container"
        >
          <h2
            className="movie-title"
          >
            Titanic
          </h2>
          <p
            className="release-date-label"
          >
            Released:
          </p>
          <p
            className="movie-release-date"
          />
          <p
            className="rating-label"
          >
            Avg. Rating:
          </p>
          <p
            className="movie-rating"
          />
        </div>,
        <p
          className="overview"
        >
          great movie
        </p>,
      ],
      "className": "movie-card",
      "style": Object {
        "backgroundImage": "url(undefined)",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "fas fa-star false",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": "i",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "dark-background",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2
              className="movie-title"
            >
              Titanic
            </h2>,
            <p
              className="release-date-label"
            >
              Released:
            </p>,
            <p
              className="movie-release-date"
            />,
            <p
              className="rating-label"
            >
              Avg. Rating:
            </p>,
            <p
              className="movie-rating"
            />,
          ],
          "className": "movie-title-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Titanic",
              "className": "movie-title",
            },
            "ref": null,
            "rendered": "Titanic",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Released:",
              "className": "release-date-label",
            },
            "ref": null,
            "rendered": "Released:",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "movie-release-date",
            },
            "ref": null,
            "rendered": null,
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Avg. Rating:",
              "className": "rating-label",
            },
            "ref": null,
            "rendered": "Avg. Rating:",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "movie-rating",
            },
            "ref": null,
            "rendered": null,
            "type": "p",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "great movie",
          "className": "overview",
        },
        "ref": null,
        "rendered": "great movie",
        "type": "p",
      },
    ],
    "type": "article",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <i
            className="fas fa-star false"
            onClick={[Function]}
          />,
          <div
            className="dark-background"
          />,
          <div
            className="movie-title-container"
          >
            <h2
              className="movie-title"
            >
              Titanic
            </h2>
            <p
              className="release-date-label"
            >
              Released:
            </p>
            <p
              className="movie-release-date"
            />
            <p
              className="rating-label"
            >
              Avg. Rating:
            </p>
            <p
              className="movie-rating"
            />
          </div>,
          <p
            className="overview"
          >
            great movie
          </p>,
        ],
        "className": "movie-card",
        "style": Object {
          "backgroundImage": "url(undefined)",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "fas fa-star false",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "dark-background",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h2
                className="movie-title"
              >
                Titanic
              </h2>,
              <p
                className="release-date-label"
              >
                Released:
              </p>,
              <p
                className="movie-release-date"
              />,
              <p
                className="rating-label"
              >
                Avg. Rating:
              </p>,
              <p
                className="movie-rating"
              />,
            ],
            "className": "movie-title-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Titanic",
                "className": "movie-title",
              },
              "ref": null,
              "rendered": "Titanic",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Released:",
                "className": "release-date-label",
              },
              "ref": null,
              "rendered": "Released:",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "movie-release-date",
              },
              "ref": null,
              "rendered": null,
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Avg. Rating:",
                "className": "rating-label",
              },
              "ref": null,
              "rendered": "Avg. Rating:",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "movie-rating",
              },
              "ref": null,
              "rendered": null,
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "great movie",
            "className": "overview",
          },
          "ref": null,
          "rendered": "great movie",
          "type": "p",
        },
      ],
      "type": "article",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
